t_main : main
s_lbrace : {
t_integer : integer
t_id : x
s_assign : =
t_number : 5
s_semi : ;
t_integer : integer
t_id : y
s_assign : =
t_number : 6
s_semi : ;
t_id : x
s_assign : =
t_id : y
s_mult : *
t_id : y
s_semi : ;
t_id : x
s_assign : =
t_id : x
s_minus : -
t_number : 15
s_semi : ;
t_id : std
s_colon : :
s_colon : :
t_string : string
t_id : name
s_assign : =
t_text : John
s_semi : ;
t_id : isXSmaller
s_assign : =
t_false : false
s_semi : ;
t_if : if
s_lparen : (
t_id : x
s_gt : >
t_number : 50
t_or : or
t_id : y
s_lt : <
t_number : 50
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : x or y is over 50
s_rparen : )
s_semi : ;
s_rbrace : }
t_if : if
s_lparen : (
t_id : x
s_le : <=
t_id : y
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : x is less than or equal to y.
s_rparen : )
s_semi : ;
t_id : isXsmaller
s_assign : =
t_true : true
s_semi : ;
s_rbrace : }
t_if : if
s_lparen : (
t_id : y
s_ge : >=
t_id : x
t_and : and
t_not : not
t_id : isXSmaller
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : y is greater than or equal to x
s_rparen : )
s_semi : ;
s_rbrace : }
t_integer : integer
t_id : a
s_assign : =
t_number : 7
s_semi : ;
t_integer : integer
t_id : b
s_assign : =
t_number : 6
s_semi : ;
t_id : isItTrue
s_lparen : (
t_integer : integer
t_id : a
s_comma : ,
t_integer : integer
t_id : b
s_rparen : )
s_semi : ;
t_integer : integer
t_id : i
s_assign : =
t_number : 0
s_semi : ;
t_while : while
s_lparen : (
t_id : i
s_lt : <
t_number : 5
s_rparen : )
s_lbrace : {
t_id : x
s_assign : =
t_id : x
s_minus : -
t_id : y
s_semi : ;
t_if : if
s_lparen : (
t_id : x
s_lt : <
t_number : 0
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : X is less than 0
s_rparen : )
s_semi : ;
s_rbrace : }
t_else : else
t_if : if
s_lparen : (
t_id : x
s_gt : >
t_number : 0
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : X is greater than 0
s_rparen : )
s_semi : ;
s_rbrace : }
t_id : i
s_assign : =
t_id : i
s_plus : +
t_number : 1
s_semi : ;
s_rbrace : }
t_id : userInput
s_assign : =
t_input : input
s_lparen : (
t_text : Enter a number 1-5: 
s_rparen : )
s_semi : ;
s_rbrace : }
t_id : isItTrue
s_lparen : (
t_integer : integer
t_id : a
s_comma : ,
t_integer : integer
t_id : b
s_rparen : )
s_lbrace : {
t_if : if
s_lparen : (
t_id : a
s_gt : >
t_id : b
s_rparen : )
s_lbrace : {
t_output : output
s_lparen : (
t_text : a is bigger  b
s_rparen : )
s_semi : ;
s_rbrace : }
t_else : else
s_lbrace : {
t_output : output
s_lparen : (
t_text : b is bigger than a
s_rparen : )
s_semi : ;
s_rbrace : }
s_rbrace : }
